from enum import Enum
from typing import Any

from aiogram.filters.callback_data import CallbackData

KEYBOARD = "kb"
BOT_TG_URL = "https://t.me/Geckoshi_bot"


class Lang(Enum):
    RU = "russian"
    EN = "english"
    TR = "turkish"
    DE = "german"


class MessageKey(Enum):
    START = "start"
    LANG_CHANGE = "lang_change"
    START_REQUIRE_SUBSCRIPTION = "start_required_subscription"
    START_REQUIRE_SUBSCRIPTION_SUCCESSFUL = "start_required_subscription_successful"
    START_REQUIRE_SUBSCRIPTION_FAILED = "start_required_subscription_failed"
    MENU_MESSAGE = "menu_message"
    REF_INVITED_STEP_ONE = "ref_invited_1"
    REF_INVITED_STEP_TWO = "ref_invited_2"
    REF_INVITE = "ref_invite"
    USER_PROFILE = "user_profile"
    LANG_MENU = "lang_menu"
    FUNCTION_NOT_IMPLEMENTED = "function_not_implemented"
    PREMIUM_ALREADY_BOUGHT = "premium_already_bought"
    PREMIUM_BUY_MENU = "premium_buy_menu"
    NOT_ENOUGH_TO_BUY_PREMIUM = "not_enough_to_buy_premium"
    PREMIUM_HAS_BOUGHT = "premium_has_bought"


class KeyboardKey(Enum):
    START_REQUIRE_SUBSCRIPTION_KB = "start_required_subscription"
    MENU = "menu"
    ADMIN_MENU = "admin_menu"
    INLINE_MENU = "inline_menu"
    REF_LINK_SHARE = "ref_link_share"
    PROFILE = "profile"
    EXIT = "exit"
    BUY_PREMIUM_MENU = "buy_premium_menu"


class M:
    id_: str = None
    text: str
    url: str = None
    with_url_placeholder: bool = False
    callback_class: Any = None

    def __init__(self, **kwargs):
        for k, v in kwargs.items():
            setattr(self, k, v)

    def text(self, text: str) -> "M":
        self.text = text
        return self

    def get_callback_instance(self, **kwargs) -> Any:
        return self.callback_class(**kwargs)


class MenuToRefCallback(CallbackData, prefix="menu-to-ref"):
    pass


class MenuToBonusCallback(CallbackData, prefix="menu-to-bonus"):
    pass


class MenuToTasksCallback(CallbackData, prefix="menu-to-tasks"):
    pass


class MenuToChequeCallback(CallbackData, prefix="menu-to-cheque"):
    pass


class MenuToP2PCallback(CallbackData, prefix="menu-to-bonus"):
    pass


class MenuToSlotsCallback(CallbackData, prefix="menu-to-slots"):
    pass


class MenuToNFTCallback(CallbackData, prefix="menu-to-nft"):
    pass


class MenuToProfileCallback(CallbackData, prefix="menu-to-profile"):
    pass


class MenuToStatistic(CallbackData, prefix="menu-to-statistic"):
    pass


class LangSetCallback(CallbackData, prefix="set-lang"):
    lang: Lang


class CheckStartMembershipCallback(CallbackData, prefix="check-start-membership"):
    kbk: KeyboardKey
    lang: Lang


class ProfileWithdraw(CallbackData, prefix="profile-withdraw"):
    pass


class BuyPremiumMenu(CallbackData, prefix="buy-premium-menu"):
    pass


class BuyPremium(CallbackData, prefix="buy-premium"):
    pass


class ActivatePromo(CallbackData, prefix="activate-promo"):
    pass


class SetLangMenu(CallbackData, prefix="set-lang-menu"):
    pass


class Exit(CallbackData, prefix="exit"):
    pass


message_data = {
    MessageKey.START: """<b>Geckoshi –ê–∏—Ä–¥—Ä–æ–ø –ø–µ—Ä–≤—ã–π –≤ –º–∏—Ä–µ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω–æ–π –º–µ–º –º–æ–Ω–µ—Ç—ã ü¶é –ù–∏–∂–µ –≤—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –≤–∞–º —è–∑—ã–∫ üåê –∏ –Ω–∞—á–Ω–∏—Ç–µ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å $GMEME –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å!\n\n____\n\n\nGeckoshi Airdrop the world's first investment meme coin ü¶é Below, select the lang that suits you üåê and start earning $GMEME right now!</b>""",

    Lang.RU: {
        MessageKey.LANG_CHANGE: "–Ø–∑—ã–∫ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω—ë–Ω –Ω–∞ —Ä—É—Å—Å–∫–∏–π !",
        MessageKey.START_REQUIRE_SUBSCRIPTION: "<b>ü¶é –î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –≤—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –Ω–∞—à–∏ –∫–∞–Ω–∞–ª—ã:</b>",
        MessageKey.START_REQUIRE_SUBSCRIPTION_SUCCESSFUL: "‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å!",
        MessageKey.START_REQUIRE_SUBSCRIPTION_FAILED: "‚õîÔ∏è –ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à–∏ –∫–∞–Ω–∞–ª—ã –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑!",
        MessageKey.MENU_MESSAGE: "<b>ü¶é –í —ç—Ç–æ–º –±–æ—Ç–µ —Ç—ã –º–æ–∂–µ—à—å:</b>",
        MessageKey.REF_INVITED_STEP_ONE: "üë• –í—ã –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏ <a href=\"tg://user?id={user_link}\">–¥—Ä—É–≥–∞!</a> –í—ã –ø–æ–ª—É—á–∏—Ç–µ 1500 $GMEME, –∫–∞–∫ —Ç–æ–ª—å–∫–æ –≤–∞—à –¥—Ä—É–≥ –ø–æ–¥–ø–∏—à–µ—Ç—Å—è –Ω–∞ –∫–∞–Ω–∞–ª—ã!",
        MessageKey.REF_INVITED_STEP_TWO: "üë• –í—ã –ø–æ–ª—É—á–∏–ª–∏ {amount} $GMEME –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –≤–∞—à–µ–≥–æ <a href=\"tg://user?id={user_link}\">–¥—Ä—É–≥–∞</a> –≤ –±–æ—Ç–µ",
        MessageKey.REF_INVITE: """üë• –ü—Ä–∏–≥–ª–∞—à–∞–π –¥—Ä—É–∑–µ–π –∏ –ø–æ–ª—É—á–∞–π –ø–æ {ref_invite_pay} $GMEME\n\nüîó –¢–≤–æ—è —Å—Å—ã–ª–∫–∞: <code>https://t.me/TeestttgeckoshiBot?start={link}</code>\n\nüó£ –¢—ã –≤—Å–µ–≥–æ –ø—Ä–∏–≥–ª–∞—Å–∏–ª: {ref_invite_count} —á–µ–ª""",
        MessageKey.USER_PROFILE: """üìù –ò–º—è: <a href=\"tg://user?id={user_link}\">{user_name}</a>\nüÜî –í–∞—à ID: <code>{user_tg_id}</code>\nüî• –ü—Ä–µ–º–∏—É–º –∞–∫–∫–∞—É–Ω—Ç: {is_premium_account}\nüíé –ë–∞–ª–∞–Ω—Å: {balance} $GMEME\nüë• –í—Å–µ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: {ref_count}\nü¶é –í–´–í–ï–î–ï–ù–û: {withdrew} $GMEME\n<b>üì£ –ú—ã —Å–æ–æ–±—â–∏–º –∑–∞—Ä–∞–Ω–µ–µ –æ –≤—ã–ø–ª–∞—Ç–∞—Ö!\nüî• –°–ª–µ–¥–∏—Ç–µ –∑–∞ –Ω–æ–≤–æ—Å—Ç—è–º–∏!\n‚õîÔ∏è –ú–ò–ù–ò–ú–ê–õ–¨–ù–´–ô –í–´–í–û–î –ë–£–î–ï–¢ {min_withdraw_in_airdrop} –í –î–ï–ù–¨ –ê–ò–†–î–†–û–ü–ê!</b>""",
        MessageKey.LANG_MENU: "–í—ã–±–µ—Ä–∏—Ç–µ –∂–µ–ª–∞–µ–º—ã–π —è–∑—ã–∫:",
        MessageKey.FUNCTION_NOT_IMPLEMENTED: "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –¥–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–µ–π—á–∞—Å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞",
        MessageKey.PREMIUM_ALREADY_BOUGHT: "‚ùó –£ –≤–∞—Å —É–∂–µ –∏–º–µ–µ—Ç—Å—è –ü—Ä–µ–º–∏—É–º!",
        MessageKey.PREMIUM_BUY_MENU: "ü¶é –¶–µ–Ω–∞ –ø—Ä–µ–º–∏—É–º–∞: {premium_gmeme_price} $GMEME",
        MessageKey.NOT_ENOUGH_TO_BUY_PREMIUM: "‚ùó –î–ª—è –ø–æ–∫—É–ø–∫–∏ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç {not_enough} $GMEME",
        MessageKey.PREMIUM_HAS_BOUGHT: "ü•≥ –í—ã –ø—Ä–∏–æ–±—Ä–µ–ª–∏ \"–ü—Ä–µ–º–∏—É–º\""
    },
}

keyboard_data = {
    Lang.RU: {
        KeyboardKey.START_REQUIRE_SUBSCRIPTION_KB: [
            [
                M(id_="@dropto_data", text="text 1", url="https://t.me/dropto_data"),
                M(id_="@dropto_data", text="text 1", url="https://t.me/dropto_data"),
            ],
            [
                M(id_="@dropto_data", text="text 1", url="https://t.me/dropto_data"),
            ],
            [
                M(text="‚úÖ –ü–æ–¥–ø–∏—Å–∞–ª—Å—è", callback_class=CheckStartMembershipCallback)
            ]
        ],
        KeyboardKey.MENU: [
            [
                M(text="/menu"),
            ]
        ],
        KeyboardKey.ADMIN_MENU: [
            [
                M(text="/admin_panel"),
            ]
        ],
        KeyboardKey.INLINE_MENU: [
            [
                M(text="üí∏ –ó–∞—Ä–∞–±–æ—Ç–∞—Ç—å", callback_class=MenuToRefCallback),
                M(text="üéÅ –ë–æ–Ω—É—Å", callback_class=MenuToBonusCallback),
            ],
            [
                M(text="üì£ –ó–∞–¥–∞–Ω–∏—è", callback_class=MenuToTasksCallback),
                M(text="üè∑ –ß–µ–∫–∏", callback_class=MenuToChequeCallback),
            ],
            [
                M(text="üó≥ P2P", callback_class=MenuToP2PCallback),
                M(text="üé∞ –°–ª–æ—Ç—ã", callback_class=MenuToSlotsCallback),
            ],
            [
                M(text="üß© NFT", callback_class=MenuToNFTCallback),
                M(text="üíº –ü—Ä–æ—Ñ–∏–ª—å", callback_class=MenuToProfileCallback),
            ],
            [
                M(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_class=MenuToStatistic),
            ],
        ],
        KeyboardKey.REF_LINK_SHARE: [
            [
                M(text="üîó –í—ã—Å–ª–∞—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ", url="https://t.me/share/url?url=https://t.me/TeestttgeckoshiBot?start={ref_link}", with_url_placeholder=True)
            ]
        ],
        KeyboardKey.PROFILE: [
            [
                M(text="üì§ –í—ã–≤–µ—Å—Ç–∏", callback_class=ProfileWithdraw),
                M(text="üî• –ü—Ä–µ–º–∏—É–º", callback_class=BuyPremiumMenu)
            ],
            [
                M(text="üéü –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥", callback_class=ActivatePromo)
            ],
            [
                M(text="üîÑ –ò–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫", callback_class=SetLangMenu)
            ],
        ],
        KeyboardKey.EXIT: [
            [
                M(text="‚¨ÖÔ∏è –í—ã–π—Ç–∏", callback_class=Exit)
            ]
        ],
        KeyboardKey.BUY_PREMIUM_MENU: [
            [
                M(text="üî• –ö—É–ø–∏—Ç—å –ø—Ä–µ–º–∏—É–º", callback_class=BuyPremium)
            ]
        ]
    }
}
